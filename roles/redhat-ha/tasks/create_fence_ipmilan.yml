---
# Task file that creates a fence resource using the fence_ipmilan fencing agent.
#
# Expected variables:
#   stonith_timeout
#   item
#
# The item variable must be a dictionary with the following entries:
#         id: name of the fence resource to create or update
#       node: name of the cluster node
#         ip: IP address of the IPMI over LAN device
#      login: User name for accessing the IPMI over LAN device
#   password: Associated password
- debug:
    msg: "{{ item['id'] }}"

- name: STONITH | Checking if the STONITH resource exists
  ansible.builtin.command:
    cmd: "pcs stonith config {{ item['id'] }}"
  register: stonith_resource_exits
  failed_when: false
  changed_when: false

- name: STONITH | Ensuring the fence resource exists
  ansible.builtin.command:
    cmd: "pcs stonith create {{ item['id'] }} fence_ipmilan
            pcmk_host_list={{ item['node'] }}
            ip={{ item['ip'] }}
            username={{ item['login'] }}
            password={{ item['password'] }}
            lanplus=1
            power_timeout={{ stonith_timeout }}
            op monitor interval={{ stonith_monitor_interval }}s
            meta failure-timeout={{ stonith_failure_timeout }}s migration-threshold={{ stonith_migration_threshold }}"
  register: fence_resource             
  changed_when: "'already exists' not in fence_resource['stdout']"
  when: stonith_resource_exits['rc'] != 0

- name: STONITH | Ensuring the fence resource is updated
  ansible.builtin.command:
    cmd: "pcs stonith update {{ item['id'] }}
            pcmk_host_list={{ item['node'] }}
            ip={{ item['ip'] }}
            username={{ item['login'] }}
            password={{ item['password'] }}
            lanplus=1
            power_timeout={{ stonith_timeout }}
            op monitor interval={{ stonith_monitor_interval }}s
            meta failure-timeout={{ stonith_failure_timeout }}s migration-threshold={{ stonith_migration_threshold }}"
  when: stonith_resource_exits['rc'] == 0
...
