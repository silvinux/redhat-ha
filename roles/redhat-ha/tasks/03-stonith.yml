---
- name: STONITH | Checking if the global STONITH timeout is set
  command:
    cmd: pcs property show stonith-timeout
  register: stonith
  changed_when: false

- name: STONITH | Ensuring the global STONITH timeout is set
  command:
    cmd: "pcs property set stonith-timeout={{ stonith_timeout }}s"
  when: "('stonith-timeout: ' + stonith_timeout|string + 's')
        not in stonith['stdout']"

- block:
  - name: STONITH | Set fence agent type
    set_fact:
      fence_agent: fence_xvm

  - name: STONITH | Set fence agent attributes
    set_fact:
      fence_agent_attributes: "{{ fence_agent_attributes | default([]) + [ {'id': 'fence_' + hostvars[item]['inventory_hostname_short'], 'key_file': stonith_kvm_key_file_path, 'port': hostvars[item]['inventory_hostname_short'], 'node': hostvars[item]['inventory_hostname']  } ] }}"
    loop: "{{ groups['nodes-prv'] }}"
    run_once: true

  - name: STONITH | Ensuring the required ports are open
    ansible.posix.firewalld:
      port: 1229/tcp
      permanent: yes
      state: enabled
      immediate: yes
  
  - name: STONITH | Create a directory /etc/cluster/
    ansible.builtin.file:
      path: /etc/cluster/
      state: directory
      mode: '0755'
  
  - name: STONITH | Copy file with owner and permissions
    ansible.builtin.copy:
      src: /tmp/fence_xvm.key
      dest: /etc/cluster/fence_xvm.key
      owner: root
      group: root
      mode: '0644'

  when: ansible_system_vendor == "Red Hat"

- block:  
  - name: STONITH | Set fence agent type
    set_fact:
      fence_agent: fence_cisco_ucs

  - name: STONITH | Set fence agent attributes
    set_fact:
      fence_agent_attributes: "{{ fence_agent_attributes | default([]) + [ {'id': 'fence_' + hostvars[item]['inventory_hostname_short'], 'ipaddr': stonith_cisco_ucs_ipaddr, 'port': hostvars[item]['inventory_hostname_short'], 'login': stonith_cisco_ucs_login, 'password': stonith_cisco_ucs_passwd, 'suborg': stonith_cisco_ucs_suborg } ] }}"
    loop: "{{ groups['nodes-prv'] }}"
    run_once: true

  when: ansible_system_vendor == "Cisco Systems Inc"

- block:
  - name: STONITH | Set fence agent type
    set_fact:
      fence_agent: fence_ipmilan

  - name: STONITH | Set fence agent type
    set_fact:
      fence_agent_attributes: "{{ fence_agent_attributes | default([]) + [ {'id': 'fence_' + hostvars[item]['inventory_hostname_short'], 'ip': hostvars[item]['stonith_ipmi_ip'], 'node': hostvars[item]['inventory_hostname'], 'login': stonith_ipmi_login, 'password': stonith_ipmi_password } ] }}"
    loop: "{{ groups['nodes-prv'] }}"
    run_once: true

  when: ansible_system_vendor != "Cisco Systems Inc" and ansible_system_vendor != "Red Hat"

- debug:
    msg: 
      - "{{ fence_agent_attributes }}"  
      - "{{ fence_agent }}"
  run_once: true
  no_log: false


- name: STONITH | Include task to create / update especific fence agent
  include_tasks: "create_{{ fence_agent }}.yml"
  loop: "{{ fence_agent_attributes }}"
  run_once: true
...
